{"version":3,"sources":["models/nonogram.ts","themes/index.tsx","components/nonogram-board/index.tsx","util/builder.ts","util/nonogram.ts","components/nonogram-board/styles.ts","components/cell/styles.ts","components/cell/index.tsx","components/builder-cell/index.tsx","components/copy-bar/styles.ts","components/copy-bar/index.tsx","components/builder-board/index.tsx","views/builder/styles.ts","components/text-container/styles.ts","views/builder/index.tsx","components/solver-cell/index.tsx","components/nonogram-vertical-labels/styles.ts","components/nonogram-vertical-labels/index.tsx","components/nonogram-horizontal-labels/styles.ts","components/nonogram-horizontal-labels/index.tsx","components/solver-board/styles.ts","components/solver-board/index.tsx","util/solver.ts","views/solver/styles.ts","views/solver/index.tsx","routes.tsx","components/header/styles.ts","components/header/index.tsx","reportWebVitals.ts","index.tsx"],"names":["CellState","NonogramSize","GlobalStyle","createGlobalStyle","normalize","theme","primary","secondary","tertiary","alert","success","info","ThemeProvider","props","BoardActionType","createBoardAction","location","type","LeftClick","boardToString","board","BigInt","data","reduce","acc","cellState","Filled","cellToString","toString","parseBigInt","str","err","createNonogram","size","arraySize","getNonogramArrayLength","Array","fill","Empty","getNonogramSideLength","Size5x5","Size10x10","sideLength","updateCellState","action","RightClick","None","Board","styled","div","attrs","sideVH","Math","min","BoardDispatch","React","MouseClickContext","undefined","NonogramBoard","clickHistoryState","useState","setClickHistory","createCell","cellRender","resetClickHistory","Provider","value","dispatch","onMouseLeave","onMouseUp","onContextMenu","e","preventDefault","map","CellDiv","BaseCell","onMouseDown","onMouseEnter","Cell","mouseClickContextState","useContext","clickHistory","clickHistoryRef","useRef","useEffect","current","cellStateRef","useCallback","actionType","button","cellstate","clickedCellState","createClickHistory","onAction","BuilderCell","boardDispatch","CopyBarContainer","CopyButton","CopyTextBar","input","onClick","target","select","CopyBar","copied","setCopied","val","readOnly","navigator","clipboard","writeText","boardReducer","state","update","$apply","BuilderBoard","useReducer","link","baseURL","window","origin","process","buildBoardLink","BuilderLayout","BoardContainer","SelectButton","selected","SelectButtonContainer","TextContainer","Builder","setSize","SolverCell","VerticalContainer","LabelContainer","getRowVals","row","rowLength","rowVals","consecutiveCells","i","push","length","NonogramVerticalLabels","solution","labels","join","HorizontalContainer","getColVals","col","colLength","colVals","NonogramHorizontalLabels","SolverContainer","SolverGrid","SolvedBanner","solved","SolvedText","p","SolverBoard","nonogramSize","setSolved","b1","b2","c1","c2","boardEqual","SolverLayout","Solver","useParams","arrayLength","padStart","split","v","stringToBoard","getNonogramSize","Routes","exact","path","component","to","HeaderDiv","Link","RouterLink","HeaderText","h1","GithubText","GithubLink","a","Header","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.26f2f8ac.chunk.js","sourcesContent":["export enum CellState {\n  Filled,\n  Empty,\n  Question,\n  None,\n}\n\nexport enum NonogramSize {\n  Size5x5,\n  Size10x10,\n}\n\nexport interface Nonogram {\n  readonly size: NonogramSize;\n  readonly data: Array<CellState>;\n}\n","import * as React from \"react\";\nimport {\n  createGlobalStyle,\n  ThemeProvider as StyledThemeProvider,\n} from \"styled-components\";\nimport { normalize } from \"styled-normalize\";\n\nconst GlobalStyle = createGlobalStyle`\n  ${normalize}\n  \n  * {\n    font-display: block;\n    font-family: \"Roboto\", sans-serif;\n  }\n`;\n\n// haha you got me I'll fine tune the colors sometime, maybe add theming ^_^\nconst theme = {\n  primary: \"white\",\n  secondary: \"black\",\n  tertiary: \"gainsboro\",\n  alert: \"red\",\n  success: \"green\",\n  info: \"blue\",\n};\n\nexport interface Props {\n  children: React.ReactNode;\n}\n\nexport const ThemeProvider = (props: Props) => (\n  <>\n    <GlobalStyle />\n    <StyledThemeProvider theme={theme} {...props} />\n  </>\n);\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport { CellState, Nonogram, NonogramSize } from \"models/nonogram\";\nimport { getNonogramSideLength } from \"util/nonogram\";\nimport { Board } from \"components/nonogram-board/styles\";\n\nexport enum BoardActionType {\n  LeftClick,\n  RightClick,\n}\n\nexport interface BoardAction {\n  type: BoardActionType;\n  location: number;\n}\n\n// create context with dispatch for cells to call\nexport const BoardDispatch = React.createContext<React.Dispatch<BoardAction>>(\n  {} as React.Dispatch<BoardAction>\n);\n\nexport interface ClickHistory {\n  // so that only cells that are the same as the initially requested cell state are affected\n  clickedCellState: CellState;\n  actionType: BoardActionType;\n}\n\n// used to track the drag effect of the nonogram.\nexport const MouseClickContext = React.createContext<\n  [\n    ClickHistory | undefined,\n    React.Dispatch<React.SetStateAction<ClickHistory | undefined>>\n  ]\n>([undefined, () => undefined]);\n\nexport interface Props {\n  size: NonogramSize;\n  board: Nonogram;\n  cellRender: (cellState: CellState, location: number) => JSX.Element;\n  dispatch: React.Dispatch<BoardAction>;\n}\n\nexport const NonogramBoard = (props: Props) => {\n  const clickHistoryState = useState<ClickHistory | undefined>(undefined);\n  const [, setClickHistory] = clickHistoryState;\n  const sideLength = getNonogramSideLength(props.size);\n  const createCell = props.cellRender;\n\n  const resetClickHistory = () => {\n    setClickHistory(undefined);\n  };\n\n  return (\n    <BoardDispatch.Provider value={props.dispatch}>\n      <MouseClickContext.Provider value={clickHistoryState}>\n        <Board\n          sideLength={sideLength}\n          onMouseLeave={resetClickHistory}\n          onMouseUp={resetClickHistory}\n          onContextMenu={(e) => e.preventDefault()}\n        >\n          {props.board.data.map(createCell)}\n        </Board>\n      </MouseClickContext.Provider>\n    </BoardDispatch.Provider>\n  );\n};\n","import { BoardActionType } from \"components/nonogram-board\";\nimport { BoardAction } from \"components/nonogram-board\";\nimport { CellState, Nonogram, NonogramSize } from \"models/nonogram\";\nimport { getNonogramArrayLength } from \"util/nonogram\";\n\nexport const createBoardAction = (\n  location: number,\n  type: BoardActionType = BoardActionType.LeftClick\n): BoardAction => ({\n  type,\n  location,\n});\n\nconst cellToString = (cellState: CellState): string =>\n  cellState === CellState.Filled ? \"1\" : \"0\";\n\n// converts board state to hex string\nexport const boardToString = (board: Nonogram): string =>\n  BigInt(\n    board.data.reduce<string>(\n      (acc: string, cellState) => acc + cellToString(cellState),\n      \"0b\"\n    )\n  ).toString(16);\n\n// catches in parsing error, replaces with 0\nconst parseBigInt = (str: string) => {\n  try {\n    return BigInt(str);\n  } catch (err) {\n    return BigInt(0);\n  }\n};\n\n// converts hex string to board state, empty on BigInt parse error\nexport const stringToBoard = (str: string, size: NonogramSize): Nonogram => {\n  const arrayLength = getNonogramArrayLength(size);\n\n  return {\n    size,\n    data: parseBigInt(`0x${str}`)\n      .toString(2)\n      .padStart(arrayLength, \"0\")\n      .split(\"\")\n      .map((v) => (v === \"1\" ? CellState.Filled : CellState.Empty)),\n  };\n};\n","import { CellState, Nonogram, NonogramSize } from \"models/nonogram\";\nimport { BoardActionType, ClickHistory } from \"components/nonogram-board\";\nimport { boardToString } from \"util/builder\";\n\nexport const createNonogram = (size: NonogramSize): Nonogram => {\n  const arraySize = getNonogramArrayLength(size);\n\n  return {\n    size,\n    data: new Array<CellState>(arraySize).fill(CellState.Empty),\n  };\n};\n\nexport const getNonogramSideLength = (size: NonogramSize): number => {\n  switch (size) {\n    case NonogramSize.Size5x5:\n      return 5;\n    case NonogramSize.Size10x10:\n      return 10;\n  }\n};\n\nexport const getNonogramSize = (size: string) => {\n  switch (size) {\n    case \"5x5\":\n      return NonogramSize.Size5x5;\n    case \"10x10\":\n      return NonogramSize.Size10x10;\n    default:\n      return NonogramSize.Size5x5;\n  }\n};\n\nexport const getNonogramArrayLength = (size: NonogramSize): number => {\n  const sideLength = getNonogramSideLength(size);\n\n  return sideLength * sideLength;\n};\n\nexport const updateCellState = (\n  cellState: CellState,\n  action: BoardActionType = BoardActionType.LeftClick\n): CellState => {\n  // handle right click\n  if (action === BoardActionType.RightClick) {\n    return cellState === CellState.Empty ? CellState.None : CellState.Empty;\n  }\n\n  // handle left click\n  return cellState === CellState.Empty ? CellState.Filled : CellState.Empty;\n};\n\n// click history for more intuitive drag effect.\nexport const createClickHistory = (\n  cellstate: CellState,\n  action: BoardActionType = BoardActionType.LeftClick\n): ClickHistory => ({\n  clickedCellState: cellstate,\n  actionType: action,\n});\n\nexport const buildBoardLink = (board: Nonogram): string => {\n  const size = getNonogramSideLength(board.size);\n  const baseURL = window.location.origin + process.env.PUBLIC_URL;\n  return `${baseURL}/#/${size}x${size}/${boardToString(board)}`;\n};\n","import styled from \"styled-components\";\n\ninterface BoardProps {\n  sideLength: number;\n}\n\nexport const Board = styled.div.attrs(({ sideLength }: BoardProps) => ({\n  sideLength,\n  sideVH: Math.min(sideLength * 10, 55),\n}))`\n  display: grid;\n  width: ${(props) => props.sideVH}vh;\n  height: ${(props) => props.sideVH}vh;\n  gap: ${(props) => 15 / props.sideLength}%;\n  grid-template-columns: repeat(${(props) => props.sideLength}, 1fr);\n  background-color: ${(props) => props.theme.tertiary};\n  border: solid;\n  border-color: ${(props) => props.theme.secondary};\n  border-radius: 2vh;\n  border-width: 1vh;\n  overflow: hidden;\n  padding: 2vh;\n  // grid layout for solver, unused for builder\n  grid-row: 1;\n  grid-column: 2;\n`;\n","import { CellState } from \"models/nonogram\";\nimport styled from \"styled-components\";\n\ninterface CellDivProps {\n  cellState: CellState;\n}\n\nexport const CellDiv = styled.div<CellDivProps>`\n  background-color: ${(props) => {\n    switch (props.cellState) {\n      case CellState.Empty:\n        return props.theme.primary;\n      case CellState.None:\n        return props.theme.alert;\n      case CellState.Filled:\n        return props.theme.secondary;\n      default:\n        return props.theme.primary;\n    }\n  }};\n\n  transition: ease-in 0.12s;\n  :hover {\n    transform: scale(1.05);\n  }\n`;\n","import * as React from \"react\";\nimport { useCallback, useContext, useEffect, useRef } from \"react\";\nimport { CellState } from \"models/nonogram\";\nimport {\n  BoardActionType,\n  ClickHistory,\n  MouseClickContext,\n} from \"components/nonogram-board\";\nimport { createClickHistory } from \"util/nonogram\";\nimport { CellDiv } from \"./styles\";\n\nexport interface Props {\n  cellState: CellState;\n  onAction: (action: BoardActionType) => void;\n}\n\ninterface BaseCellProps {\n  cellState: CellState;\n  onMouseDown: React.MouseEventHandler<HTMLDivElement>;\n  onMouseEnter: React.MouseEventHandler<HTMLDivElement>;\n}\n\nconst BaseCell = (props: BaseCellProps) => {\n  return (\n    <CellDiv\n      cellState={props.cellState}\n      onMouseDown={props.onMouseDown}\n      onMouseEnter={props.onMouseEnter}\n    />\n  );\n};\n\nexport const Cell = (props: Props) => {\n  const mouseClickContextState = useContext(MouseClickContext);\n  const [clickHistory, setClickHistory] = mouseClickContextState;\n\n  // optimize event handlers with refs\n  const clickHistoryRef = useRef<ClickHistory>();\n  useEffect(() => {\n    clickHistoryRef.current = clickHistory;\n  }, [clickHistory]);\n\n  const cellStateRef = useRef<CellState>(CellState.Empty);\n  useEffect(() => {\n    cellStateRef.current = props.cellState;\n  }, [props.cellState]);\n\n  const onMouseDown = useCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    const actionType =\n      e.button === 0 ? BoardActionType.LeftClick : BoardActionType.RightClick;\n    setClickHistory(createClickHistory(cellStateRef.current, actionType));\n    props.onAction(actionType);\n  }, []);\n\n  // need to track click type in ClickHistory due to unreliability of MouseEvent.button for mouseenter\n  // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n  const onMouseEnter = useCallback(() => {\n    if (clickHistoryRef.current?.clickedCellState === cellStateRef.current) {\n      props.onAction(clickHistoryRef.current?.actionType);\n    }\n  }, []);\n\n  return (\n    <BaseCell\n      cellState={props.cellState}\n      onMouseDown={onMouseDown}\n      onMouseEnter={onMouseEnter}\n    />\n  );\n};\n","import * as React from \"react\";\nimport { useContext } from \"react\";\nimport { CellState } from \"models/nonogram\";\nimport { BoardDispatch } from \"components/nonogram-board\";\nimport { createBoardAction } from \"util/builder\";\nimport { Cell } from \"components/cell\";\n\nexport interface Props {\n  cellState: CellState;\n  location: number;\n}\n\nexport const BuilderCell = (props: Props) => {\n  const boardDispatch = useContext(BoardDispatch);\n  const onAction = () => {\n    // treat all clicks as left\n    boardDispatch(createBoardAction(props.location));\n  };\n\n  return <Cell cellState={props.cellState} onAction={onAction} />;\n};\n","import { MouseEvent } from \"react\";\nimport styled from \"styled-components\";\n\nexport const CopyBarContainer = styled.div`\n  margin-top: 1rem;\n  display: flex;\n  flex-direction: row;\n  \n  cursor: pointer;\n  \n  border: solid;\n  border-radius: 1rem;\n  border-color: ${(props) => props.theme.secondary}\n  \n  text-align: center;\n  \n  overflow: hidden;\n  box-sizing: border-box;\n`;\n\nexport const CopyButton = styled.div`\n  background-color: ${(props) => props.theme.secondary};\n  color: ${(props) => props.theme.primary};\n  padding: 1rem;\n  margin: auto;\n  text-align: center;\n\n  border-left: solid;\n  border-width: 4;\n  border-color: ${(props) => props.theme.secondary};\n\n  transition: ease-in 0.15s;\n\n  font-size: 1.25rem;\n  text-wrap: false;\n\n  ${CopyBarContainer}:hover & {\n    background-color: ${(props) => props.theme.primary};\n    color: ${(props) => props.theme.secondary};\n  }\n\n  cursor: pointer;\n`;\n\nexport const CopyTextBar = styled.input.attrs({\n  type: \"text\",\n  onClick: (e: MouseEvent<HTMLInputElement>) => {\n    (e.target as HTMLInputElement).select();\n  },\n})`\n  color: ${(props) => props.theme.secondary};\n  padding: 1rem;\n  font-size: 1rem;\n  border: none;\n  flex: 1;\n\n  &:focus {\n    outline: none;\n  }\n`;\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport { CopyBarContainer, CopyButton, CopyTextBar } from \"./styles\";\n\nexport interface Props {\n  val: string;\n}\n\nexport const CopyBar = (props: Props) => {\n  const [copied, setCopied] = useState(false);\n  const onClick = () => {\n    setCopied(true);\n    navigator.clipboard.writeText(props.val);\n  };\n\n  const onMouseLeave = () => {\n    setCopied(false);\n  };\n\n  return (\n    <CopyBarContainer>\n      <CopyTextBar value={props.val} readOnly />\n      <CopyButton onClick={onClick} onMouseLeave={onMouseLeave}>\n        {copied ? \"Copied!\" : \"Share!\"}\n      </CopyButton>\n    </CopyBarContainer>\n  );\n};\n","import * as React from \"react\";\nimport { CellState, Nonogram, NonogramSize } from \"models/nonogram\";\nimport { BoardAction, NonogramBoard } from \"components/nonogram-board\";\nimport update from \"immutability-helper\";\nimport { updateCellState } from \"util/nonogram\";\nimport { useReducer } from \"react\";\nimport { BuilderCell } from \"components/builder-cell\";\nimport { CopyBar } from \"components/copy-bar\";\nimport { createNonogram, buildBoardLink } from \"util/nonogram\";\n\nexport interface Props {\n  size: NonogramSize;\n}\n\n// update to switch block if more actions added\nconst boardReducer = (state: Nonogram, action: BoardAction): Nonogram =>\n  update(state, {\n    data: {\n      [action.location]: { $apply: (cellState) => updateCellState(cellState) },\n    },\n  });\n\nexport const BuilderBoard = (props: Props) => {\n  const [board, boardDispatch] = useReducer<\n    React.Reducer<Nonogram, BoardAction>\n  >(boardReducer, createNonogram(props.size));\n  const link = buildBoardLink(board);\n\n  return (\n    <>\n      <NonogramBoard\n        size={props.size}\n        board={board}\n        dispatch={boardDispatch}\n        cellRender={(cellState: CellState, location: number) => (\n          <BuilderCell\n            cellState={cellState}\n            location={location}\n            key={location}\n          />\n        )}\n      />\n      <CopyBar val={link} />\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const BuilderLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n`;\n\ninterface SelectButtonProps {\n  selected: boolean;\n}\n\nexport const BoardContainer = styled.div`\n  margin: 1rem;\n`;\n\nexport const SelectButton = styled.div<SelectButtonProps>`\n  color: ${(props) =>\n    props.selected ? props.theme.primary : props.theme.secondary};\n  background-color: ${(props) =>\n    props.selected ? props.theme.secondary : props.theme.primary};\n  padding: 1rem 0rem;\n  transition: ease-in 0.2s;\n  font-size: 1rem;\n  text-align: center;\n  width: 4rem;\n  user-select: none;\n  cursor: ${(props) => (props.selected ? \"default\" : \"pointer\")};\n`;\n\nexport const SelectButtonContainer = styled.div`\n  border-radius: 1rem;\n  display: flex;\n  flex-direction: row;\n  overflow: hidden;\n  border-color: ${(props) => props.theme.tertiary};\n  border: solid;\n`;\n","import styled from \"styled-components\";\n\nexport const TextContainer = styled.div`\n  padding-left: 1rem;\n  flex: 1;\n`;\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport { NonogramSize } from \"models/nonogram\";\nimport { BuilderBoard } from \"components/builder-board\";\nimport {\n  BoardContainer,\n  BuilderLayout,\n  SelectButton,\n  SelectButtonContainer,\n} from \"views/builder/styles\";\nimport { TextContainer } from \"components/text-container/styles\";\n\nexport const Builder = () => {\n  const [size, setSize] = useState(NonogramSize.Size5x5);\n\n  const Board = () => <BuilderBoard size={size} />;\n\n  return (\n    <BuilderLayout>\n      <BoardContainer>\n        <Board />\n      </BoardContainer>\n      <SelectButtonContainer>\n        <SelectButton\n          onClick={() => setSize(NonogramSize.Size5x5)}\n          selected={size === NonogramSize.Size5x5}\n        >\n          5x5\n        </SelectButton>\n        <SelectButton\n          onClick={() => setSize(NonogramSize.Size10x10)}\n          selected={size === NonogramSize.Size10x10}\n        >\n          10x10\n        </SelectButton>\n      </SelectButtonContainer>\n      <TextContainer>\n        <p>\n          1. Click on cells to create a nonogram (you can drag too!) <br />\n          2. Send the link to share!\n        </p>\n      </TextContainer>\n    </BuilderLayout>\n  );\n};\n","import * as React from \"react\";\nimport { useContext } from \"react\";\nimport { CellState } from \"models/nonogram\";\nimport { BoardDispatch } from \"components/nonogram-board\";\nimport { createBoardAction } from \"util/builder\";\nimport { Cell } from \"components/cell\";\nimport { BoardActionType } from \"components/nonogram-board\";\n\nexport interface Props {\n  cellState: CellState;\n  location: number;\n}\n\nexport const SolverCell = (props: Props) => {\n  const boardDispatch = useContext(BoardDispatch);\n  const onAction = (e: BoardActionType) => {\n    boardDispatch(createBoardAction(props.location, e));\n  };\n\n  return <Cell cellState={props.cellState} onAction={onAction} />;\n};\n","import styled from \"styled-components\";\n\nexport const VerticalContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: flex-end;\n  padding: 2.5vh 0.5vh;\n  margin: 0 1vh;\n\n  grid-column: 1;\n  grid-row: 1;\n`;\n\nexport const LabelContainer = styled.div`\n  font-size: 2.5vh;\n  text-wrap: none;\n  color: ${(props) => props.theme.secondary};\n  margin-right: 1vh;\n  user-select: none;\n`;\n","import * as React from \"react\";\nimport { CellState, Nonogram } from \"models/nonogram\";\nimport { getNonogramSideLength } from \"util/nonogram\";\nimport { LabelContainer, VerticalContainer } from \"./styles\";\n\nexport interface Props {\n  solution: Nonogram;\n}\n\nconst getRowVals = (board: Nonogram, row: number) => {\n  const rowLength = getNonogramSideLength(board.size);\n  const rowVals: number[] = [];\n\n  let consecutiveCells = 0;\n\n  for (let i = 0; i < rowLength; i++) {\n    const location = i + row * rowLength;\n    if (board.data[location] === CellState.Filled) {\n      consecutiveCells++;\n    } else if (consecutiveCells !== 0) {\n      rowVals.push(consecutiveCells);\n      consecutiveCells = 0;\n    }\n  }\n\n  // handle end case\n  if (consecutiveCells !== 0) {\n    rowVals.push(consecutiveCells);\n  }\n\n  // handle empty case\n  if (rowVals.length == 0) {\n    rowVals.push(0);\n  }\n\n  return rowVals;\n};\n\nexport const NonogramVerticalLabels = ({ solution }: Props) => {\n  const rowLength = getNonogramSideLength(solution.size);\n  const labels = Array<JSX.Element>(rowLength);\n\n  for (let row = 0; row < rowLength; row++) {\n    labels[row] = (\n      <LabelContainer key={row}>\n        {getRowVals(solution, row).join(\" \")}\n      </LabelContainer>\n    );\n  }\n\n  return <VerticalContainer>{labels}</VerticalContainer>;\n};\n","import styled from \"styled-components\";\n\nexport const HorizontalContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: flex-start;\n  padding: 0.5vh 1.5vh;\n\n  grid-column: 2;\n  grid-row: 2;\n`;\n\nexport const LabelContainer = styled.div`\n  font-size: 2.5vh;\n  text-wrap: none;\n  writing-mode: vertical-rl;\n  text-orientation: upright;\n  color: ${(props) => props.theme.secondary};\n  margin-bottom: 1vh;\n  user-select: none;\n`;\n","import * as React from \"react\";\nimport { CellState, Nonogram } from \"models/nonogram\";\nimport { getNonogramSideLength } from \"util/nonogram\";\nimport { LabelContainer, HorizontalContainer } from \"./styles\";\n\nexport interface Props {\n  solution: Nonogram;\n}\n\nconst getColVals = (board: Nonogram, col: number) => {\n  const colLength = getNonogramSideLength(board.size);\n  const colVals: number[] = [];\n\n  let consecutiveCells = 0;\n\n  for (let i = 0; i < colLength; i++) {\n    const location = col + i * colLength;\n    if (board.data[location] === CellState.Filled) {\n      consecutiveCells++;\n    } else if (consecutiveCells !== 0) {\n      colVals.push(consecutiveCells);\n      consecutiveCells = 0;\n    }\n  }\n\n  // handle end case\n  if (consecutiveCells !== 0) {\n    colVals.push(consecutiveCells);\n  }\n\n  // handle empty case\n  if (colVals.length == 0) {\n    colVals.push(0);\n  }\n\n  return colVals;\n};\n\nexport const NonogramHorizontalLabels = ({ solution }: Props) => {\n  const rowLength = getNonogramSideLength(solution.size);\n  const labels = Array<JSX.Element>(rowLength);\n\n  for (let col = 0; col < rowLength; col++) {\n    labels[col] = (\n      <LabelContainer key={col}>\n        {getColVals(solution, col).join(\"\")}\n      </LabelContainer>\n    );\n  }\n\n  return <HorizontalContainer>{labels}</HorizontalContainer>;\n};\n","import styled from \"styled-components\";\n\nexport const SolverContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const SolverGrid = styled.div`\n  display: grid;\n  grid-auto-columns: auto;\n  grid-auto-rows: auto;\n`;\n\ninterface SolvedBannerProps {\n  solved: boolean;\n}\n\nexport const SolvedBanner = styled.div<SolvedBannerProps>`\n  grid-row: 1;\n  grid-column: 2;\n\n  display: flex;\n  flex-direction: row-reverse;\n  justify-content: flex-start;\n  align-items: center;\n  z-index: -1;\n\n  border-radius: 4vh;\n  // hide from left edge\n  background-color: ${(props) => props.theme.success};\n\n  transition: transform linear 0.4s;\n  ${(props) =>\n    props.solved ? \"transform: translateX(25%)\" : \"transform: translateX(0%);\"}\n`;\n\nexport const SolvedText = styled.p`\n  writing-mode: vertical-rl;\n  font-size: 10vh;\n  color: ${(props) => props.theme.primary};\n  margin: 0 1.5vh;\n  user-select: none;\n`;\n","import * as React from \"react\";\nimport { useEffect, useReducer, useState } from \"react\";\nimport { createNonogram, updateCellState } from \"util/nonogram\";\nimport { boardEqual } from \"util/solver\";\nimport { CellState, Nonogram } from \"models/nonogram\";\nimport { BoardAction, NonogramBoard } from \"components/nonogram-board\";\nimport update from \"immutability-helper\";\nimport { SolverCell } from \"components/solver-cell\";\nimport { NonogramVerticalLabels } from \"components/nonogram-vertical-labels\";\nimport { NonogramHorizontalLabels } from \"components/nonogram-horizontal-labels\";\nimport {\n  SolvedBanner,\n  SolvedText,\n  SolverGrid,\n  SolverContainer,\n} from \"./styles\";\n\nexport interface Props {\n  solution: Nonogram;\n}\n\n// update to switch block if more actions added\nconst boardReducer = (state: Nonogram, action: BoardAction): Nonogram =>\n  update(state, {\n    data: {\n      [action.location]: {\n        $apply: (cellState) => updateCellState(cellState, action.type),\n      },\n    },\n  });\n\nexport const SolverBoard = (props: Props) => {\n  const nonogramSize = props.solution.size;\n  const [solved, setSolved] = useState(false);\n  const [board, boardDispatch] = useReducer<\n    React.Reducer<Nonogram, BoardAction>\n  >(boardReducer, createNonogram(nonogramSize));\n\n  useEffect(() => {\n    if (boardEqual(props.solution, board)) {\n      setSolved(true);\n    }\n  }, [props.solution, board]);\n\n  return (\n    <SolverContainer>\n      <SolverGrid>\n        <NonogramVerticalLabels solution={props.solution} />\n        <NonogramHorizontalLabels solution={props.solution} />\n        <NonogramBoard\n          size={nonogramSize}\n          board={board}\n          dispatch={boardDispatch}\n          cellRender={(cellState: CellState, location: number) => (\n            <SolverCell\n              cellState={cellState}\n              location={location}\n              key={location}\n            />\n          )}\n        />\n        <SolvedBanner solved={solved}>\n          <SolvedText>\n            {/* don't render hidden text */}\n            {solved && \"Solved!\"}\n          </SolvedText>\n        </SolvedBanner>\n      </SolverGrid>\n    </SolverContainer>\n  );\n};\n","import { CellState, Nonogram } from \"models/nonogram\";\n\nconst cellValid = (c1: CellState, c2: CellState) => {\n  if (c1 !== c2) {\n    return c1 !== CellState.Filled && c2 !== CellState.Filled;\n  }\n\n  return true;\n};\n\nexport const boardEqual = (b1: Nonogram, b2: Nonogram): boolean => {\n  if (b1.data.length !== b2.data.length) {\n    return false;\n  }\n\n  for (let i = 0; i < b1.data.length; i++) {\n    const cell1 = b1.data[i];\n    const cell2 = b2.data[i];\n    if (!cellValid(cell1, cell2)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","import styled from \"styled-components\";\n\nexport const SolverLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  height: 100%;\n`;\n","import * as React from \"react\";\nimport { useParams } from \"react-router\";\nimport { SolverBoard } from \"components/solver-board\";\nimport { getNonogramSize } from \"util/nonogram\";\nimport { stringToBoard } from \"util/builder\";\nimport { SolverLayout } from \"./styles\";\nimport { TextContainer } from \"components/text-container/styles\";\n\ninterface PathParams {\n  size: string;\n  data: string;\n}\n\nexport const Solver = () => {\n  const { size, data } = useParams<PathParams>();\n  const nonogramSize = getNonogramSize(size);\n  const solution = stringToBoard(data, nonogramSize);\n\n  return (\n    <SolverLayout>\n      <TextContainer>\n        <p>Left-click to mark as filled, right-click to mark as empty</p>\n      </TextContainer>\n      <SolverBoard solution={solution} />\n    </SolverLayout>\n  );\n};\n","import * as React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { Builder } from \"views/builder\";\nimport { Solver } from \"views/solver\";\n\nexport const Routes = () => (\n  <Switch>\n    <Route exact path={\"/\"} component={Builder} />\n    <Route path={\"/:size/:data\"} component={Solver} />\n    <Route path={\"*\"}>\n      <Redirect to={\"/\"} />\n    </Route>\n  </Switch>\n);\n","import styled from \"styled-components\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nexport const HeaderDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  background-color: ${(props) => props.theme.tertiary};\n  margin-bottom: 1rem;\n`;\n\nexport const Link = styled(RouterLink)`\n  color: ${(props) => props.theme.secondary};\n  text-decoration-color: ${(props) => props.theme.secondary};\n\n  :active {\n    text-decoration-color: ${(props) => props.theme.primary};\n    color: ${(props) => props.theme.primary};\n  }\n`;\n\nexport const HeaderText = styled.h1`\n  margin: 0;\n  padding: 1rem 2rem;\n`;\n\nexport const GithubText = styled(HeaderText)`\n  margin-left: auto;\n`;\n\nexport const GithubLink = styled.a`\n  color: ${(props) => props.theme.info};\n  text-decoration-color: ${(props) => props.theme.info};\n\n  :active {\n    text-decoration-color: ${(props) => props.theme.alert};\n    color: ${(props) => props.theme.alert};\n  }\n`;\n","import * as React from \"react\";\n\nimport {\n  GithubLink,\n  GithubText,\n  HeaderDiv,\n  HeaderText,\n  Link,\n} from \"components/header/styles\";\n\nexport const Header = () => (\n  <HeaderDiv>\n    <HeaderText>\n      <Link to={\"/\"}>Picto-Lite</Link>\n    </HeaderText>\n\n    <GithubText>\n      <GithubLink href={\"https://github.com/ilknarf/picto-lite/\"}>\n        Github\n      </GithubLink>\n    </GithubText>\n  </HeaderDiv>\n);\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { ThemeProvider } from \"themes\";\nimport { Routes } from \"routes\";\nimport { Header } from \"components/header\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Header />\n        <Routes />\n      </Router>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}